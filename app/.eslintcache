[{"C:\\Users\\Treys\\devmountain-wr8\\unit-4\\day-4\\noDB\\app\\src\\index.js":"1","C:\\Users\\Treys\\devmountain-wr8\\unit-4\\day-4\\noDB\\app\\src\\App.js":"2","C:\\Users\\Treys\\devmountain-wr8\\unit-4\\day-4\\noDB\\app\\src\\reportWebVitals.js":"3","C:\\Users\\Treys\\devmountain-wr8\\unit-4\\day-4\\noDB\\app\\src\\Components\\Header.js":"4","C:\\Users\\Treys\\devmountain-wr8\\unit-4\\day-4\\noDB\\app\\src\\Components\\BudgetCreator.js":"5","C:\\Users\\Treys\\devmountain-wr8\\unit-4\\day-4\\noDB\\app\\src\\Components\\BudgetList.js":"6","C:\\Users\\Treys\\devmountain-wr8\\unit-4\\day-4\\noDB\\app\\src\\Components\\Budget.js":"7"},{"size":500,"mtime":1609796551141,"results":"8","hashOfConfig":"9"},{"size":3759,"mtime":1609961536704,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":183,"mtime":1609961536704,"results":"12","hashOfConfig":"9"},{"size":6659,"mtime":1609961451225,"results":"13","hashOfConfig":"9"},{"size":768,"mtime":1609967924271,"results":"14","hashOfConfig":"9"},{"size":548,"mtime":1609961193323,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"vz900",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\Treys\\devmountain-wr8\\unit-4\\day-4\\noDB\\app\\src\\index.js",[],["33","34"],"C:\\Users\\Treys\\devmountain-wr8\\unit-4\\day-4\\noDB\\app\\src\\App.js",["35","36","37"],"import React, {Component} from 'react';\nimport Header from './Components/Header';\nimport BudgetCreator from './Components/BudgetCreator';\nimport BudgetList from './Components/BudgetList';\nimport axios from 'axios';\nimport './App.css';\n//import express from 'express';\n// import budgets from '../../server/budgets';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      budgets: [\n\n    \n      ],\n      id: 0,\n      selectedBudgetId: 0,\n\n    }\n\n    // this.addIncome = this.addIncome.bind(this)\n    // this.addExpense = this.addExpense.bind(this)\n\n    this.deleteBudget = this.deleteBudget.bind(this)\n    this.editBudget = this.editBudget.bind(this)\n    this.selectedId = this.selectedId.bind(this)\n  }\n\n  componentDidMount = () => {\n    axios.get('/api/budgets').then( results => {\n      this.setState({ budgets: results.data });\n    })\n    .catch(error => console.log(error));\n    \n  }\n  \n\n  // createBudget = (income, expense) => {\n  //   let budget = {id: this.state.id, income, expense}\n  //   this.setState({id: 1 + this.state.id})\n    \n  //   this.setState({budgets: [...this.state.budgets, budget]})\n  // }\n\n  \n  createBudget = (income, expense) => {\n    console.log(income)\n    axios.post(`/api/budgets/`, {income, expense})\n    .then(results => {\n      this.setState({budgets: results.data});\n    })\n    .catch(error => \n      console.log(error));\n  }\n\n\n\n  // deleteBudget = (id) => {\n    \n  //   let array = [...this.state.budgets]\n  //   console.log(id)\n  //   console.log(array.findIndex(e => e.id === id))\n  //   array.splice(array.findIndex(e => e.id === id), 1)\n  //   console.log(array)\n  //   this.setState({budgets: [...array]})\n  // }\n  deleteBudget = (id) => {\n    axios.delete(`/api/budgets/${id}`)\n    .then(results => {\n      this.setState({budgets: results.data});\n    })\n    .catch(error => console.log(error));\n\n  }\n  // editBudget = (income, expense, id) => {\n  //   let array = [...this.state.budgets]\n  //   let index = array.findIndex(budget => budget.id === id)\n  //   array[index].income = {...income}\n  //   array[index].expense = {...expense}\n  //   this.setState({budgets: [...array]})\n  // }\n\n  editBudget = ( id, income, expense) => {\n    console.log(income)\n    axios.put(`/api/budgets/${id}`, {income, expense})\n    .then(results => {\n      this.setState({budgets: results.data});\n    })\n    .catch(error => console.log(error));\n  }\n\n  selectedId = (id) => {\n    this.setState({selectedBudgetId: id})\n  }\n\n  addIncome = (key, amount) => {\n    \n    let num = parseInt(amount)\n    if(num !== NaN && key !== ''){\n      let copy = this.state.budgets\n      copy.find(e => e.id === this.state.selectedBudgetId).income[key] = amount\n      this.setState({budgets: [...this.state.budgets]})\n    } else {\n        alert(\"Income amount needs to be a number and needs a name\")\n    }\n    console.log('click')\n    \n  }\n\n  addExpense = (key, amount) => {\n    let num = parseInt(amount)\n    if(num !== NaN && key !== ''){\n      let copy = this.state.budgets\n      copy.find(e => e.id === this.state.selectedBudgetId).expense[key] = amount\n      this.setState({budgets: [...this.state.budgets]})\n    } else {\n        alert(\"Expense amount needs to be a number and needs a name\")\n    }\n    console.log('click')\n  }\n\n\n\n  render(){\n\n    console.log(this.state.budgets)\n    return (\n      <main className=\"App\">\n        <Header />\n        <BudgetCreator \n          createBudgetFn = {this.createBudget}\n          budgets = {this.state.budgets}\n          selectedBudgetId = {this.state.selectedBudgetId}\n          selectedIdFn = {this.selectedId}\n          deleteBudgetFn = {this.deleteBudget}\n          editBudgetFn = {this.editBudget}\n          />\n\n\n      </main>\n    )\n  }\n}\n\nexport default App;\n\n\n\n","C:\\Users\\Treys\\devmountain-wr8\\unit-4\\day-4\\noDB\\app\\src\\reportWebVitals.js",[],"C:\\Users\\Treys\\devmountain-wr8\\unit-4\\day-4\\noDB\\app\\src\\Components\\Header.js",[],"C:\\Users\\Treys\\devmountain-wr8\\unit-4\\day-4\\noDB\\app\\src\\Components\\BudgetCreator.js",["38","39","40","41"],"import React, {Component  } from \"react\";\r\nimport BudgetList from './BudgetList';\r\nimport './BudgetCreator.css';\r\n\r\nexport default class BudgetCreator extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            inputIncomeAmt: '',\r\n            inputIncomeName: '',\r\n            inputExpenseName: '',\r\n            inputExpenseAmt: '',\r\n            income: {\r\n\r\n            },\r\n            expense: {\r\n\r\n            },\r\n            id: ''\r\n            \r\n            \r\n            \r\n            \r\n \r\n        }\r\n    this.pickBudget = this.pickBudget.bind( this )\r\n    \r\n        \r\n\r\n    }\r\n\r\n    handleIncomeNameChange = (event) =>{\r\n        this.setState({inputIncomeName: event.target.value})\r\n    }\r\n    handleIncomeAmtChange=(event) =>{\r\n        this.setState({inputIncomeAmt:event.target.value})\r\n    }\r\n    handleExpenseNameChange=(event) =>{\r\n        this.setState({inputExpenseName: event.target.value})\r\n    }\r\n    handleExpenseAmtChange=(event) =>{\r\n        this.setState({inputExpenseAmt: event.target.value})\r\n    }\r\n\r\n    clearBudget(){\r\n        this.setState({income: {}})\r\n        this.setState({expense: {}})\r\n        this.setState({id: {}})\r\n    }\r\n\r\n    addIncome(key,amount ) {\r\n        let num = parseInt(amount)\r\n        if(num !== NaN && key !== ''){\r\n          \r\n          \r\n          console.log(this.state.income[key] = amount)\r\n          this.setState({income: {...this.state.income}})\r\n          this.setState({inputIncomeAmt: ''})\r\n          this.setState({inputIncomeName: ''})\r\n        } else {\r\n            alert(\"Income amount needs to be a number and needs a name\")\r\n        }\r\n    }\r\n\r\n    addExpense(key,amount ) {\r\n        let num = parseInt(amount)\r\n        if(num !== NaN && key !== ''){\r\n          \r\n          \r\n          console.log(this.state.expense[key] = amount)\r\n          this.setState({expense: {...this.state.expense}})\r\n          this.setState({inputExpenseAmt: ''})\r\n          this.setState({inputExpenseName: ''})\r\n        } else {\r\n            alert(\"Expense amount needs to be a number and needs a name\")\r\n        }\r\n    }\r\n\r\n    deleteExpense = (key) => {\r\n        let copy = {...this.state.expense}\r\n        delete copy[key]\r\n        this.setState({expense: {...copy}})\r\n      }\r\n      \r\n    \r\n      deleteIncome = (key) => {\r\n        let copy = {...this.state.income}\r\n        delete copy[key]\r\n        console.log(copy)\r\n        this.setState({income: {...copy}})\r\n        \r\n      }\r\n\r\n      createBudget = () => {\r\n        const {editBudgetFn} = this.props\r\n        const {income, expense} = this.state\r\n        const {createBudgetFn} = this.props\r\n        if(this.props.selectedBudgetId === this.state.id){\r\n            console.log('hi')\r\n            editBudgetFn(this.state.id, income, expense )\r\n        }\r\n        else {\r\n            console.log('hello')\r\n\r\n\r\n            createBudgetFn(income, expense)\r\n            this.setState({income: {}})\r\n            this.setState({expense: {}})\r\n            this.setState({id: {}}) \r\n        }\r\n\r\n      }\r\n\r\n      pickBudget = (budget, id) => {\r\n          console.log(id, 'id')\r\n          this.props.selectedIdFn(id)\r\n          this.setState({id: id})\r\n          this.setState({income: {...budget.income}})\r\n          this.setState({expense: {...budget.expense}})\r\n          console.log(this.state.id)\r\n      }\r\n\r\n\r\n    \r\n\r\n\r\n    render(){\r\n        let {inputIncomeAmt, inputIncomeName, inputExpenseAmt, inputExpenseName} = this.state\r\n\r\n        return (\r\n            <span>\r\n            <div className=\"creator\">\r\n                <h1>\r\n                    Budget Creator\r\n                </h1>\r\n                <div>\r\n                    <div className=\"income-measure\"></div>\r\n                    <div className=\"expense-measure\"></div>\r\n                </div>\r\n                <div className=\"list-holder\">\r\n                    <h2>Income</h2>\r\n                    <ul className=\"income-list\">\r\n                   \r\n                   {Object.keys(this.state.income).map(element  =>  <li>{element} = { this.state.income[element]}\r\n                  <button onClick={() => this.deleteIncome(element)}\r\n                   >delete</button></li>)}\r\n                   </ul>\r\n                    <div className=\"income-btns\">\r\n                        <p>Name of income</p>\r\n\r\n                    <input \r\n                        type=\"text\"\r\n                        onChange={ this.handleIncomeNameChange }\r\n                        value={inputIncomeName}  />\r\n\r\n                        <p>Amount</p> \r\n\r\n                        <input \r\n                            type=\"text\"\r\n                            onChange={ this.handleIncomeAmtChange }\r\n                            value={inputIncomeAmt}/> \r\n\r\n                            <button onClick={() => this.addIncome(inputIncomeName, inputIncomeAmt)}>Add Income</button>\r\n                    </div><h2>Expenses</h2>\r\n                        <ul className=\"expense-list\">\r\n                            {Object.keys(this.state.expense).map(element  =>  <li>{element} = { this.state.expense[element]} {console.log(element)}\r\n                            <button onClick={() => this.deleteExpense(element)}\r\n                            >delete</button></li>)}\r\n                        </ul>\r\n                    <div className=\"expense-btns\">\r\n                    <p>Name of expense</p>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={ this.handleExpenseNameChange }\r\n                        value={inputExpenseName}  /> \r\n                        \r\n                    <p>Amount</p> \r\n                    <input type=\"text\"\r\n                        onChange={ this.handleExpenseAmtChange }\r\n                        value={inputExpenseAmt}/>\r\n                    <button onClick={() => this.addExpense(inputExpenseName, inputExpenseAmt)}>Add Expense</button>\r\n                </div>\r\n                </div>\r\n                <button onClick={() => this.createBudget()}>Add/Update Budget</button>\r\n                <button onClick={() => this.clearBudget()}>Clear</button>\r\n            </div>\r\n            <BudgetList \r\n                      income = {this.state.income}  \r\n                      expense = {this.state.expense}\r\n                      budgets = {this.props.budgets}\r\n                      selectedBudgetId = {this.props.selectedBudgetId}\r\n                      deleteBudgetFn = {this.props.deleteBudgetFn}\r\n                      editBudgetFn = {this.props.editBudgetFn}\r\n                      pickBudgetFn = {this.pickBudget}\r\n                      />\r\n            </span>\r\n            \r\n        )\r\n    }\r\n}\r\n      ","C:\\Users\\Treys\\devmountain-wr8\\unit-4\\day-4\\noDB\\app\\src\\Components\\BudgetList.js",["42"],"C:\\Users\\Treys\\devmountain-wr8\\unit-4\\day-4\\noDB\\app\\src\\Components\\Budget.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":18},{"ruleId":"51","severity":1,"message":"52","line":102,"column":8,"nodeType":"53","messageId":"54","endLine":102,"endColumn":19},{"ruleId":"51","severity":1,"message":"52","line":115,"column":8,"nodeType":"53","messageId":"54","endLine":115,"endColumn":19},{"ruleId":"51","severity":1,"message":"52","line":53,"column":12,"nodeType":"53","messageId":"54","endLine":53,"endColumn":23},{"ruleId":"55","severity":1,"message":"56","line":56,"column":23,"nodeType":"57","endLine":56,"endColumn":40},{"ruleId":"51","severity":1,"message":"52","line":67,"column":12,"nodeType":"53","messageId":"54","endLine":67,"endColumn":23},{"ruleId":"55","severity":1,"message":"56","line":70,"column":23,"nodeType":"57","endLine":70,"endColumn":41},{"ruleId":"47","severity":1,"message":"58","line":1,"column":16,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'BudgetList' is defined but never used.","Identifier","unusedVar","use-isnan","Use the isNaN function to compare with NaN.","BinaryExpression","comparisonWithNaN","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]